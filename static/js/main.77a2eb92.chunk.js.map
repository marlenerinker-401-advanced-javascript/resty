{"version":3,"sources":["header.js","footer.js","if.js","form.js","results.js","history.js","app.js","index.js"],"names":["Header","id","activeClassName","exact","to","React","Component","Footer","If","props","condition","children","render","Form","state","method","url","loading","handleChange","bind","handleSubmit","handleOption","setStateFromProps","event","this","setState","target","value","preventDefault","console","log","restOptions","fetch","results","json","headers","JSON","stringify","data","apiCall","body","handler","nextProps","onSubmit","type","placeholder","name","onChange","className","onClick","autoFocus","Results","handlePopulate","innerHTML","info","split","populate","items","archive","map","item","idx","key","History","handleReRun","details","toggleDetails","App","handleForm","history","push","localStorage","setItem","archiveHistory","populateForm","a","getHistory","parse","getItem","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.77a2eb92.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n      <div id='header'>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li><NavLink activeClassName='selected' exact to=\"/\">Home</NavLink></li>\n            <li><NavLink activeClassName='selected' exact to=\"/history\">History</NavLink></li>\n          </ul>\n        </nav>\n  \n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './design/form.scss';\n\nclass Footer extends React.Component {\n  \n\n  render() {\n    return (\n      <div id='footer'>\n        <p>&copy; 2020 Marlene Rinker</p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nconst If = (props) => {\n  return render(props.condition, props.children);\n};\nexport default If;","import React from 'react';\nimport If from './if.js';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method: 'GET',\n      url: '',\n      loading: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOption = this.handleOption.bind(this);\n    this.setStateFromProps = this.setStateFromProps.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  handleOption(event) {\n    event.preventDefault();\n    this.setState({method: event.target.value});\n  }\n\n  \n  async handleSubmit(event) {\n    try {\n      console.log('A URL was submitted: ', this.state.url);\n      console.log('this.state from handleSubmit: ', this.state);\n      event.preventDefault();\n      this.setState({ loading: true});\n      let restOptions = {\n        method: this.state.method,\n      };\n      let results = await fetch(this.state.url, restOptions);\n      let json = await results.json();\n      this.setState( { loading: false});\n      console.log(results);\n      console.log(json);\n  \n      let headers = JSON.stringify(results.headers, null, 2);\n      let data = JSON.stringify(json, null, 2);\n      let apiCall = {method: this.state.method, url: this.state.url, body: data};\n      this.props.handler(headers, data, apiCall);\n      \n      \n      \n\n    }\n    catch (error) {\n      this.setState( {loading: false});\n      let headers = {};\n      let data = 'An error occurred. Try again.';\n      let apiCall = null;\n      this.props.handler(headers, data, apiCall);\n    }  \n       \n  }\n  componentWillReceiveProps(nextProps){\n    if(nextProps.url!==this.props.url){\n      //Perform some operation\n      this.setState({url: nextProps.url });  \n    }\n  }\n  setStateFromProps() {\n    if(this.props.method) {\n      this.setState({ method: this.props.method});\n    }\n    if(this.props.url) {\n      this.setState( { url: this.props.url});\n    }\n  }\n\n  render() {\n    \n    return (\n      <div id='form'>\n        <form onSubmit={this.handleSubmit}>\n          <label>URL:</label>\n          <input type=\"text\" id=\"url\" placeholder=\"http://api.url.here\" name=\"url\"  value={this.state.url} onChange={this.handleChange}></input>\n          <input className=\"action\" type=\"submit\" value=\"GO!\" ></input><br></br>\n          <input className=\"button\" type=\"button\" value=\"GET\" onClick={this.handleOption} autoFocus></input>\n          <input className=\"button\" type=\"button\" value=\"POST\" onClick={this.handleOption}></input>\n          <input className=\"button\" type=\"button\" value=\"PUT\" onClick={this.handleOption}></input>\n          <input className=\"button\" type=\"button\" value=\"DELETE\" onClick={this.handleOption}></input>\n        </form>\n        <If condition={this.state.loading === true}>\n          <section className=\"spinner\">\n            <i className=\"fa fa-spinner fa-spin\" />\n          </section>\n        </If>\n      </div>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport If from './if.js';\n\n\nclass Results extends React.Component {\n  // TODO: populate the URL and method on the form when you click one of the history results\n  \n  handlePopulate = (event) => {\n    console.log('handling re-run');\n    console.log(event.target.innerHTML);\n    let element = event.target.innerHTML;\n    let info = element.split(' ');\n    let method = info[0];\n    let url = info[1];\n    console.log('method is ', method);\n    console.log('url is ', url);\n    this.props.populate(method, url);\n  };\n\n  render() {\n    let headers = this.props.headers;\n    let items = this.props.data;\n    let apiCall = this.props.archive;\n    return (\n      <div id = 'results'>\n        <section id = 'history'>\n          <ul>\n            {apiCall.map((item, idx) => {\n              return (\n                <li key={idx} id={idx}>\n                  <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url} onClick={this.handlePopulate}></JSONPretty>\n                </li>\n            \n              );\n            })}\n          </ul>\n        </section>\n\n        <If condition={items}>\n          <section id = 'details'>\n            <ul id='headers'>\n              <JSONPretty id=\"json-pretty\" data={headers}></JSONPretty>\n            </ul>\n            <ul id='items'>\n                    \n              <JSONPretty id=\"json-pretty\" data={items}></JSONPretty>\n                       \n            </ul>\n          </section>\n        </If>\n      </div>\n                \n    );\n              \n  }\n}\n\n\n\nexport default Results;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport If from './if.js';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: false,\n    }\n\n    \n  }\n\n  // TODO: implement the handle re-run functionality - should re-run the API call and redirect to results page\n  handleReRun = () => {\n    console.log('handling re-run');\n    this.setState( {details: false});\n  };\n\n  toggleDetails = () => {\n    console.log('showing details');\n    if (!this.state.details) {\n      this.setState( {details: true});\n      return;\n    }\n    this.setState( { details: false});\n  }\n\n\n  render() {\n    let apiCall = this.props.archive;\n    console.log('this is apiCall in history', apiCall);\n    return (\n      <div id='history'>\n        <p>This is your history!</p>\n        <section id='api-calls'>\n          <ul>\n          {apiCall.map((item, idx) => {\n          return (\n            <li key={idx}>\n              <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url} onClick={this.toggleDetails}></JSONPretty>\n              <If condition={this.state.details === true}>\n              <JSONPretty id=\"json-pretty\" data={item.body}></JSONPretty>\n              <input className=\"button\" type=\"button\" value=\"Re-run\" onClick={this.handleReRun}></input>\n              </If>\n            </li>\n            \n          );\n        })}\n          </ul>\n        </section>\n      </div>\n    );\n  }\n}\n\n\nexport default History;","import React from 'react';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport Form from './form.js';\nimport Results from './results.js';\nimport History from './history.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport './design/app.scss';\nimport './design/footer.scss';\nimport './design/header.scss';\nimport './design/form.scss';\nimport './design/results.scss';\n\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: '',\n      data: '',\n      history: [],\n      archive: [],\n      method: '',\n      url: ''\n    }\n    this.getHistory = this.archiveHistory.bind(this);\n  };\n\n\n\n  handleForm = (headers, data, apiCall) => {\n    this.setState( { headers, data } );\n    if (apiCall){\n    this.state.history.push(apiCall);\n    localStorage.setItem('history', JSON.stringify(this.state.history));\n    this.archiveHistory();\n    } \n  };\n\n  populateForm = async(method, url) => {\n    console.log('this.state from populate form', this.state.method);\n    await this.setState({ method, url });\n    console.log('populate form: method and url ', method, url);\n    console.log('this.state from populate form', this.state.method);\n  }\n\n  async archiveHistory() {\n    let history = await JSON.parse(localStorage.getItem('history'));\n    this.setState( {archive: history});\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Header />\n          <Route exact path=\"/\">\n            <Form handler={this.handleForm} method={this.state.method} url={this.state.url}/>\n            <Results headers={this.state.headers} data={this.state.data} archive={this.state.archive} populate={this.populateForm}/>\n          </Route>\n          <Route exact path=\"/history\">\n            <History archive={this.state.archive}/>\n          </Route>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}