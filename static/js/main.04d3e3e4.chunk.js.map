{"version":3,"sources":["header.js","footer.js","form.js","if.js","results.js","history.js","app.js","index.js"],"names":["Header","id","activeClassName","exact","to","React","Component","Footer","Form","props","state","method","url","handleChange","bind","handleSubmit","handleOption","event","this","setState","target","value","preventDefault","console","log","restOptions","fetch","results","json","headers","JSON","stringify","data","apiCall","body","handler","onSubmit","type","placeholder","name","onChange","className","onClick","autoFocus","If","condition","children","render","Results","items","archive","map","item","idx","key","History","handleReRun","details","toggleDetails","App","handleForm","history","push","localStorage","setItem","archiveHistory","getHistory","parse","getItem","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.04d3e3e4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n      <div id='header'>\n        <h1>RESTy</h1>\n        <nav>\n          <ul>\n            <li><NavLink activeClassName='selected' exact to=\"/\">Home</NavLink></li>\n            <li><NavLink activeClassName='selected' exact to=\"/history\">History</NavLink></li>\n          </ul>\n        </nav>\n  \n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './design/form.scss';\n\nclass Footer extends React.Component {\n  \n\n  render() {\n    return (\n      <div id='footer'>\n        <p>&copy; 2020 Marlene Rinker</p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method: 'GET',\n      url: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOption = this.handleOption.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({url: event.target.value});\n  }\n\n  handleOption(event) {\n    event.preventDefault();\n    this.setState({method: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    // TODO: add spinner during fetch\n\n    console.log('A URL was submitted: ', this.state.url);\n    event.preventDefault();\n    let restOptions = {\n      method: this.state.method,\n    };\n    let results = await fetch(this.state.url, restOptions);\n    let json = await results.json();\n    console.log(results);\n    console.log(json);\n\n    let headers = JSON.stringify(results.headers, null, 2);\n    let data = JSON.stringify(json, null, 2);\n    let apiCall = {method: this.state.method, url: this.state.url, body: data};\n    this.props.handler(headers, data, apiCall);\n  }\n\n  render() {\n    return (\n      <div id='form'>\n        <form onSubmit={this.handleSubmit}>\n          <label>URL:</label>\n          <input type=\"text\" id=\"url\" placeholder=\"http://api.url.here\" name=\"url\"onChange={this.handleChange}></input>\n          <input className=\"action\" type=\"submit\" value=\"GO!\" ></input><br></br>\n          <input className=\"button\" type=\"button\" value=\"GET\" onClick={this.handleOption} autoFocus></input>\n          <input className=\"button\" type=\"button\" value=\"POST\" onClick={this.handleOption}></input>\n          <input className=\"button\" type=\"button\" value=\"PUT\" onClick={this.handleOption}></input>\n          <input className=\"button\" type=\"button\" value=\"DELETE\" onClick={this.handleOption}></input>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;","\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n}\n\nconst If = (props) => {\n  return render(props.condition, props.children);\n};\nexport default If;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport If from './if.js';\n\n\nclass Results extends React.Component {\n  // TODO: populate the URL and method on the form when you click one of the history results\n  \n  \n\n  render() {\n    let headers = this.props.headers;\n    let items = this.props.data;\n    let apiCall = this.props.archive;\n    return (\n      <div id = 'results'>\n        <section id = 'history'>\n          <ul>\n            {apiCall.map((item, idx) => {\n              return (\n                <li key={idx}>\n                  <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url}></JSONPretty>\n                </li>\n            \n              );\n            })}\n          </ul>\n        </section>\n\n        <If condition={items}>\n          <section id = 'details'>\n            <ul id='headers'>\n              <JSONPretty id=\"json-pretty\" data={headers}></JSONPretty>\n            </ul>\n            <ul id='items'>\n                    \n              <JSONPretty id=\"json-pretty\" data={items}></JSONPretty>\n                       \n            </ul>\n          </section>\n        </If>\n      </div>\n                \n    );\n              \n  }\n}\n\n\n\nexport default Results;","import React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport If from './if.js';\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: false,\n    }\n\n    \n  }\n\n  // TODO: implement the handle re-run functionality - should re-run the API call and redirect to results page\n  handleReRun = () => {\n    console.log('handling re-run');\n    this.setState( {details: false});\n  };\n\n  toggleDetails = () => {\n    console.log('showing details');\n    if (!this.state.details) {\n      this.setState( {details: true});\n      return;\n    }\n    this.setState( { details: false});\n  }\n\n\n  render() {\n    let apiCall = this.props.archive;\n    console.log('this is apiCall in history', apiCall);\n    return (\n      <div id='history'>\n        <p>This is your history!</p>\n        <section id='api-calls'>\n          <ul>\n          {apiCall.map((item, idx) => {\n          return (\n            <li key={idx}>\n              <JSONPretty id=\"json-pretty\" data={item.method + ' ' + item.url} onClick={this.toggleDetails}></JSONPretty>\n              <If condition={this.state.details === true}>\n              <JSONPretty id=\"json-pretty\" data={item.body}></JSONPretty>\n              <input className=\"button\" type=\"button\" value=\"Re-run\" onClick={this.handleReRun}></input>\n              </If>\n            </li>\n            \n          );\n        })}\n          </ul>\n        </section>\n        {/* <If condition={this.state.details === true}>\n        <section id='query-details'>\n        <input className=\"button\" type=\"button\" value=\"Re-run\" onClick={this.handleReRun}></input>\n          <ul>\n            <li>query details</li>\n          </ul>\n        </section>\n        </If> */}\n      </div>\n    );\n  }\n}\n\n\nexport default History;","import React from 'react';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport Form from './form.js';\nimport Results from './results.js';\nimport History from './history.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\nimport './design/app.scss';\nimport './design/footer.scss';\nimport './design/header.scss';\nimport './design/form.scss';\nimport './design/results.scss';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: '',\n      data: '',\n      history: [],\n      archive: []\n    }\n    this.getHistory = this.archiveHistory.bind(this);\n  };\n\n\n\n  handleForm = (headers, data, apiCall) => {\n    this.setState( { headers, data } );\n    this.state.history.push(apiCall);\n    localStorage.setItem('history', JSON.stringify(this.state.history));\n    this.archiveHistory();\n  };\n\n  async archiveHistory() {\n    let history = await JSON.parse(localStorage.getItem('history'));\n    this.setState( {archive: history});\n  }\n\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Header />\n          <Route exact path=\"/\">\n            <Form handler={this.handleForm}/>\n            <Results headers={this.state.headers} data={this.state.data} archive={this.state.archive}/>\n          </Route>\n          <Route exact path=\"/history\">\n            <History archive={this.state.archive}/>\n          </Route>\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}